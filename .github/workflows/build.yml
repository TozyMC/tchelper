name: Java Gradle CI
on:
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.4
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: "${{ !startsWith(github.ref, 'refs/heads/main/') || github.event_name == 'pull_request' }}"
          arguments: build
      - name: Determine Status
        run: |
          if [ "$(./gradlew properties | awk '/^projectVersion:/ { print $2; }' | grep '\-SNAPSHOT')" ]; then
            echo "STATUS=snapshot" >> $GITHUB_ENV
          else
            echo "STATUS=release" >> $GITHUB_ENV
          fi
      - name: Decode GPG key
        run: |
          echo "${{secrets.SIGNING_SECRET_KEY_RING_FILE}}" > ~/.gradle/secring.gpg.b64
          base64 -d ~/.gradle/secring.gpg.b64 > ~/.gradle/secring.gpg
      - name: Publish Release
        if: "${{ env.STATUS == 'release' && github.event_name == 'release' }}"
        run: ./gradlew publish -Psigning.keyId=${{secrets.SIGNING_KEY_ID}} -Psigning.password=${{secrets.SIGNING_KEY_PASSWORD}} -Psigning.secretKeyRingFile=$(echo ~/.gradle/secring.gpg)
        env:
          GH_USERNAME: "${{ secrets.GH_USERNAME }}"
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
